# Creating the firmware for the controller board:
# This file contains common pin mappings for the BigTreeTech GTR.

# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the GTR. Instead,
# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the GTR
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Creating the firmware the raspberry pi:
# cd ~/klipper/
# make menuconfig
# In the menu, set "Microcontroller Architecture" to "Linux process," then save and exit.
# To build and install the new micro-controller code, run:
# sudo service klipper stop
# make flash
# sudo service klipper start

[stepper_x]
step_pin: PC15
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PF2
position_min: -34#-49
position_endstop: -34#-49
position_max:     319
homing_speed: 60
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0

[stepper_y]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC13
position_endstop: -33#-48
position_min: -33#-48
position_max:     326
homing_speed: 60
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0

[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PB9
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PE0
endstop_pin: probe:z_virtual_endstop
position_min: -2 # The Z carriage may need to travel below the Z=0
                 # homing point if the bed has a significant tilt.
position_max: 390
homing_speed: 10 #6 #12
second_homing_speed: 1

[stepper_z1]
step_pin: PD6
dir_pin: PD5
enable_pin: !PD7
microsteps: 16
rotation_distance: 8
## endstop_pin: probe:z_virtual_endstop ## commeted out due to dual z drivers with only one endstop

# The safe_z_home section modifies the default G28 behavior
[safe_z_home]
home_xy_position: 5,5
speed: 100#50
z_hop: 5 #15
z_hop_speed: 5

[z_tilt]
z_positions:
# A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point"
#The first entry corresponds to stepper_z, the second to stepper_z1,
  -59, 152 #x,y coordinates
  438, 152 #x,y coordinates
points:
#A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command
  10, 82 #x,y coordinates
  280, 82 #x,y coordinates

#####################################################################
#
# 	Extruder and Hotend
#
#####################################################################

[extruder]
step_pin: PG12
dir_pin: PG11
enable_pin: !PG13
microsteps: 16
rotation_distance: 24.15 #23. #3.4334763948497855 #200c
gear_ratio: 32:16, 56:16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB1 # Heat0
sensor_pin:  PC1 # T0 Header
sensor_type: ATC Semitec 104GT-2
max_extrude_cross_section:50
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 250
min_extrude_temp:0
max_extrude_only_distance:100
pressure_advance: 0.03#0.05 #0.055#0.065 #jef mellem 12,45-13mm på pressure advance modellen

#[extruder1]
#step_pin: PD6
#dir_pin: PD5
#enable_pin: !PD7
#heater_pin: PA1 # Heat1
#sensor_pin: PC2 # T1
#...

#[extruder2]
#step_pin: PD1
#dir_pin: PD0
#enable_pin: !PD2
#heater_pin: PB0 # Heat2
#sensor_pin: PC3 # T2
#...

[heater_bed]
heater_pin: PA2
sensor_pin: PC0 # BED
sensor_type: Generic 3950 #sensor_type: NTC 100K beta 3950 #deprecated
#control: watermark #kan også være pid
min_temp: 0
max_temp: 100

[fan]
pin: PA1 # FAN0 #benytter denne som part cooling

[heater_fan fan1]
pin: PB0 # FAN1

#[heater_fan fan2]
#pin: PC8 # FAN2

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

#[temperature_sensor k_therm]
#sensor_type: MAX31855
#sensor_pin: PH9
#spi_bus: spi2b

#####################################################################
# 	Probe
# 	BL TOUCH: Using the original wiring:
# 	  the yellow wire from the triple is the control_pin
# 	  the white wire from the pair is the sensor_pin
#
#	Debug
# 	BLTOUCH_DEBUG COMMAND=pin_down
# 	BLTOUCH_DEBUG COMMAND=pin_up 
#	verify that the pin moves up, and that the red light turns on again. 
#	If it's flashing then there's some problem.
#	https://www.klipper3d.org/BLTouch.html for further test
#####################################################################
#####################################################################
# 	BL-Touch/SERVO Control
#####################################################################

#[servo gtr_bltouch]
#sensor_pin: PB11
#control_pin: PH11

[bltouch]
sensor_pin: ^PH11
control_pin: PB11  #z- endstop
#pin_move_time: 0.675
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.675 seconds.
#pin_up_reports_not_triggered: True
#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for a genuine BLTouch; some BLTouch clones may require
#   False.  The default is True.
#pin_up_touch_mode_reports_triggered: True
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for a genuine BLTouch; some BLTouch clones may require
#   False. The default is True.

# Measure the x and y distance between the tip of your nozzle and 
# your BLTouch tip
# x : + is to the right and - is to the left
# y : + is toward the back and - is toward the front
x_offset: 15.85 
y_offset: 68.85
#z_offset: 0.55

#speed: 5.0
#   See the "probe" section for information on these parameters.

#[homing_override]
#gcode:
 #G1 Z10 F600
# SENSORLESS_HOME_X
# SENSORLESS_HOME_Y
# G1 X100 Y100 F9000
# G28 Z
#axes: xyz
#
#home_xy_position: 85, 73
#speed: 150
#z_hop: 10.0
#z_hop_speed: 20.0

[bed_mesh]
speed: 100
horizontal_move_z: 5
#mesh_min: 15.85, 20.85
#mesh_max: 310,310
mesh_min: 10.85,35.85
mesh_max: 290.85,290.85
probe_count: 3,3
fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
fade_end: 10.0 #2
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.

[mcu]
baud: 250000
restart_method: command
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_3000550016504D5543363820-if00
 #dev/serial0
# setup for PA9, PA10 USART1_tx / rx directly connected to the RPI GPIO TX / RX pins
# These are the pins the GTR uses for its built in RPI 40 pin connector
# only connect GND, TX, RX - supply 5v power to the RPI separately
# do not cross over TX/RX - it is done internally on the GTR PCB.
# Use "sudo raspi-config" to disable the serial terminal - but enable the serial port.
# When running "make menuconfig" you must un-select the USB Serial check box

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 2500#3500 #bekræftet men pga. forskellig belt tension skaber det mange vibrationer og mærkelig lyde
#max_accel_to_decel:3500
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V #BLV
max_z_accel:    350   		#Max ? #Default: 5
square_corner_velocity: 5.0 #Can experiment with 8.0, default 5.0 #Denne var ikke på config før

[input_shaper]
shaper_freq_x: 37.4
shaper_type_x: ei
shaper_freq_y: 23 #39.0
shaper_type_y: mzv
#shaper_type: ei#mzv

#https://www.youtube.com/watch?v=OoWQUcFimX8&t=11s
########################################
# TMC2209 configuration
#Be sure that a hold_current setting is not specified in the TMC driver section
#That is where to set them. Just keep in mind that TMC driver currents are RMS, not peak. Multiply your target peak current by 0.707 to determine what value to define.
#So, according to the manufacturer recommended current, I should do .800 x .707 = .5656. And enter .5656 as my current instead of .800?https://i.imgur.com/VFiHBWQ.jpg
########################################

[tmc2209 stepper_x]
uart_pin: PC14
run_current: 0.900 #0.760 Marlin
interpolate: True
sense_resistor: 0.110
#hold_current: 0.500
stealthchop_threshold: 999999
diag_pin: ^PF2      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 153 # 255 is most sensitive value, 0 is least sensitive


[tmc2209 stepper_y]
uart_pin: PE1
run_current: 0.900 #0.760 Marlin
interpolate: True
sense_resistor: 0.110
#hold_current: 0.500
stealthchop_threshold: 999999
diag_pin: ^PC13      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 155 # 255 is most sensitive value, 0 is least sensitive

[tmc2209 stepper_z]
uart_pin: PB5
run_current: 0.400 #0.760 Marlin
interpolate: True
sense_resistor: 0.110
#diag_pin: ^PE0      # Set to MCU pin connected to TMC DIAG pin
#hold_current: 0.450
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PG10
run_current: 0.400 #0.760 Marlin
interpolate: True
sense_resistor: 0.110
#diag_pin: ^PG14      # Set to MCU pin connected to TMC DIAG pin
#hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
#[tmc2209 extruder1]
uart_pin: PD4
run_current: 0.400 #0.760 Marlin
interpolate: True
sense_resistor: 0.110
#diag_pin: ^PG9      # Set to MCU pin connected to TMC DIAG pin
#hold_current: 0.500
stealthchop_threshold: 999999



########################################
# EXP1 / EXP2 (display) pins
########################################

# display section not tested - pinout should be correct but my LCD did not work yet

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC11, EXP1_3=PC10, EXP1_5=PG8, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=PA8, EXP1_6=PG7, EXP1_8=PG5, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PD10, EXP2_5=PH10, EXP2_7=PB10,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>
    # not sure on this: Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

# See the sample-lcd.cfg file for definitions of common LCD displays.

[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

[output_pin beeper]
pin: EXP1_1


[virtual_sdcard]
path: ~/gcode_files
[display_status]
[pause_resume]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example
########################################
# macro
########################################
[include timelapse.cfg]
[include /home/pi/klipper_config/nozzle_scrub.cfg]

[gcode_macro G29]
gcode:
 #G29 - Bed Leveling (Marlin wannabe)
 SENSORLESS_HOME_X
 SENSORLESS_HOME_Y
 G28 Z0
 G1 Z10 F600
 BED_MESH_CALIBRATE

[gcode_macro G38]
gcode:
 Z_TILT_ADJUST
 
[gcode_macro BedLevel]
gcode:
 BED_MESH_CALIBRATE METHOD=automatic

[gcode_macro RESUME]
rename_existing: BASE_RESUME
#default_parameter_E: 1      # edit to your preferred retract length
gcode:
  {% set E = params.E|default(1) %}
  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
#default_parameter_E: 1.7
gcode:
  {% set E = params.E|default(1.7) %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91
  
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    
[gcode_macro PID_Heater200]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=200 [WRITE_FILE=1]
  SAVE_CONFIG
[gcode_macro PID_Bed60] 
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=60 [WRITE_FILE=1]
  SAVE_CONFIG

[gcode_macro SENSORLESS_HOME_X]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

[gcode_macro SENSORLESS_HOME_Y]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y0
    # Move away
    G90
    G1 Y5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 1#2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}
######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT_part1]
# Use this macro to control what happens when prints start instead of slicer-specific start scripts. 
# For PrusaSlicer:
#   add this as Start G-code: START_PRINT BED_TEMP={bed_temperature[0]} EXTRUDER_TEMP={temperature[0]}
# For Cura:
#   add this as Start G-code: START_PRINT BED_TEMP={material_bed_temperature} EXTRUDER_TEMP={material_print_temperature}
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(61)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}

    G21                          ; set units to Millimetres
    M107                         ; disable fans
    G90                          ; absolute positioning
    M82                          ; set extruder to absolute mode
    G92 E0                       ; set extruder position to 0
    M117 Heating...              ; LCD status message
    M140 S{BED_TEMP}; # Start bed heating
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    M190 S{BED_TEMP}; get bed temping up during first layer # Wait for bed to reach temperature

    SENSORLESS_HOME_X  ;Leveling
    SENSORLESS_HOME_Y  ;Leveling
    G28 Z0 ;Leveling
    G1 Z10 F600; raise z
    Z_TILT_ADJUST

[gcode_macro START_PRINT_part2]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(61)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    ;G29                          ; homing og mesh bed leveling macro
    ;Z_TILT_ADJUST
    ;G28 X                        ; home X and Y - bruger G29 Macro
    ;G28 Y                        ; home X and Y - bruger G29 Macro
    ;G28 Z                        ; home Z - bruger G29 Macro
   # G1 Z15                       ; raise nozzle
   # M204 S100                    ; set accel for probing
    
  #  M204 S500                    ; set accel back to normal
  #  G1 X0 Y0 Z15 F5000           ; get out the way
    M400                         ; clear buffer
  #  G4 S1                        ; pause
    
   # G1 Z2 E0 F75                 ; extrude filament back into nozzle
    M117 Printing...         ; LCD status message'
    M109 S{EXTRUDER_TEMP}
    clean_nozzle
    G1 Z5                       ; raise nozzle
    G1 Z5 E0 F75                 ; extrude filament back into nozzle
    G1 Z5 X150 Y150 F6000
   # G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed 
   # G1 X2.0 Y15 F9000.0 ; Move to start position
   # G1 Z0.2
   # G1 X40 Z0.2 F500 E15  ;Extrude 15mm of filament in a 4cm line
    #G1 E-1 F500 ; Retract a little
  #  G1 X80 F4000 ; Quickly wipe away from the filament line


    #G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed 
    #G1 X2.0 Y20 Z0.2 F5000.0 ; Move to start position 
    #G1 X2.0 Y200.0 Z0.2 F1500.0 E15 ; Draw the first line 
    ;G1 X2.4 Y200.0 Z0.2 F5000.0 ; Move to side a little 
    ;G1 X2.4 Y20 Z0.2 F1500.0 E30 ; Draw the second line
   # G92 E0 ; Reset Extruder 
   # G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

    # Move the nozzle near the bed
    #G1 Z5 F3000
    # Move the nozzle very close to the bed
    #G1 Z0.15 F300


[gcode_macro END_PRINT]
gcode:
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    # Raise nozzle by 10mm
    G1 Z10 F3000
    #G0 X{x_park} Y{y_park} E-3 F300 #F6000
    G90                          ; absolute positioning
    G0 X-2 Y-2 E-3 F3000
    # Raise nozzle by 10mm
    #G1 Z10 F3000
    G90
    # Disable steppers
    M84

[include movement_test.cfg]
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
[include mainsail.cfg]

[gcode_macro PRINT_START2]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
#    default_parameter_BED: 60 #target bed temperature
#    default_parameter_EXTRUDER: 210 #target extruder temperature

    SAVE_GCODE_STATE NAME=start

    M190 S{BED}                        ; set bed temp and wait for it reach temp
    M109 S{EXTRUDER|int}               ; M109 heat and wait for it to reach temp

    RESTORE_GCODE_STATE NAME=start

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.354
#*# pid_ki = 1.155
#*# pid_kd = 352.594
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 15.230
#*# pid_ki = 0.483
#*# pid_kd = 119.934
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.109329, -0.125579, -0.109329
#*# 	  -0.023079, -0.070579, -0.058079
#*# 	  0.008171, 0.005671, 0.011921
#*# tension = 0.2
#*# min_x = 121.8
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 127.53
#*# x_count = 3
#*# max_y = 182.29
#*# mesh_x_pps = 2
#*# max_x = 188.18
#*#
#*# [bltouch]
#*# z_offset = 0.435
